package bytecode;

import java.io.IOException;
import java.util.AbstractList;

public class ConstantPool extends AbstractList<ConstantPoolInfo> {
	private ConstantPoolInfo[] items;
	
	public ConstantPool(ByteCodeReader reader) throws IOException {
		int constantPoolCount = reader.read2u();
		
		this.items = new ConstantPoolInfo[constantPoolCount];
		for(int i = 1; i < items.length; i++) {
			this.items[i] = ConstantPoolInfo.instance(reader);
		}
	}
	
//	public <T extends ConstantPoolInfo> T get(int index) {
//		return (T)this.items[index];
//	}
	
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		for(int i = 1; i < items.length; i++) {
			sb.append(String.format("const #%d = %s%n", i, items[i]));
		}
		return sb.toString();
	}


	@Override
	public int size() {
		return this.items.length;
	}

	@Override
	public ConstantPoolInfo get(int index) {
		return this.items[index];
	}
}
