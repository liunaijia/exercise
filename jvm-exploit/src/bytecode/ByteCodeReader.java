package bytecode;

import java.io.BufferedInputStream;
import java.io.Closeable;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

public class ByteCodeReader implements Closeable {
	private final DataInputStream stream;
	
	public ByteCodeReader(String filePath) throws FileNotFoundException {
		this.stream = new DataInputStream(new BufferedInputStream(new FileInputStream(filePath)));
	}
	
	/**
	 * read 1u
	 * @return unsigned byte
	 * @throws IOException
	 */
	public int read1u() throws IOException {
		return this.stream.readUnsignedByte();
	}
	
	/**
	 * read 2u
	 * @return unsigned short
	 * @throws IOException
	 */
	public int read2u() throws IOException {
		return this.stream.readUnsignedShort();
	}
	
	public int read4u() throws IOException {
		return this.stream.readInt();
	}
	
	/**
	 * read 4u
	 * @return signed int
	 * @throws IOException
	 */
	public String read4uHexString() throws IOException {
		return "0x" + Integer.toHexString(this.stream.readInt()).toUpperCase();
	}
	
	/**
	 * read long
	 * @return long
	 * @throws IOException
	 */
	public long readLong() throws IOException {
		return this.stream.readLong();
	}
	
	public float readFloat() throws IOException {
		return this.stream.readFloat();
	}
	
	/**
	 * read string
	 * @return string
	 * @throws IOException
	 */
	public String readString() throws IOException {
		return stream.readUTF();
		/*
		等同于下面的代码
		int length = read2u();
		
		byte[] bytes = new byte[length];
		stream.readFully(bytes);
		
		return new String(bytes, 0, bytes.length, Charset.forName("utf-8"));
		*/
	}

	@Override
	public void close() throws IOException {
		this.stream.close();
	}

}
