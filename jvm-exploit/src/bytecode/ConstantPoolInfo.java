package bytecode;

import java.io.DataInputStream;
import java.io.IOException;

public abstract class ConstantPoolInfo {
//	private U1 tag;
//	
//	protected void setTag(U1 tag) {
//		this.tag = tag;
//	}

	public static ConstantPoolInfo instance(DataInputStream stream) throws IOException {
		ConstantPoolInfo constantPoolInfo;
		
		U1 tag = new U1(stream);
		switch(tag.getValue()) {
			case 1:
				constantPoolInfo = new ConstantUtf8Info(stream);
				break;
			case 7:
				constantPoolInfo = new ConstantClassInfo(stream);
				break;
			case 10:
				constantPoolInfo = new ConstantMethodRefInfo(stream);
				break;
			case 12:
				constantPoolInfo = new ConstantNameAndTypeInfo(stream);
				break;
			default:
				throw new ClassFormatError(String.format("invalid constant pool tag %d", tag.getValue()));
		}
		
//		constantPoolInfo.setTag(tag);
		return constantPoolInfo;
	}
	
//	@Override
//	public String toString() {
//		return super.toString();
//	}
}
