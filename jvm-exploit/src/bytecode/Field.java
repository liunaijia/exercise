package bytecode;

import java.io.IOException;
import java.util.Arrays;

import attributes.Attribute;

public class Field {
	// u2 access_flags;
	private final AccessFlags accessFlags;

	// u2 name_index;
	private final String name;

	// u2 descriptor_index;
	private final String typeName;

	// u2 attributes_count;
	// attribute_info attributes[attributes_count];
	private final Attribute[] attributes;

	public Field(ByteCodeReader reader, ConstantPool constantPool)
			throws IOException {
		// 访问标记
		this.accessFlags = new AccessFlags(reader);
		// 字段名称
		this.name = constantPool.getString(reader.read2u());
		// 字段类型
		this.typeName = TypeNameConverter.convertToTypeName(constantPool
				.getString(reader.read2u()));
		// 属性
		int attributesCount = reader.read2u();
		attributes = new Attribute[attributesCount];
		for (int i = 0; i < attributesCount; i++)
			attributes[i] = new Attribute(reader, constantPool);
	}

	@Override
	public String toString() {
		return String.format("%s%s %s %s", this.accessFlags, this.typeName,
				this.name, Arrays.toString(this.attributes));
	}
}
