package data;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;

public class Database {
	private final String url;

	public Database(String url) {
		this.url = url;

	}

	private Connection createConnection() throws SQLException {
		// 在 JDBC API 4.0 中，DriverManager.getConnection 方法得到了增强，可自动加载 JDBC
		// Driver。 因此，使用 sqljdbc4.jar 类库时，应用程序无需调用 Class.forName 方法来注册或加载驱动程序。
		return DriverManager.getConnection(url);
	}

	public int executeUpdate(String sql) throws SQLException {
		try (Connection connection = createConnection()) {
			try (Statement statement = connection.createStatement()) {
				return statement.executeUpdate(sql);
			}
		}
	}

	// public <E> Iterable<E> executeQuery(String sql,
	// FunctionThatThrows<ResultSet, E> action) throws SQLException {
	// try (Connection connection = createConnection()) {
	// try (Statement statement = connection.createStatement()) {
	// try (ResultSet rs = statement.executeQuery(sql)) {
	// return new Iterable<E>() {
	// @Override
	// public Iterator<E> iterator() {
	// return new ResultSetIterator<E>(rs, action);
	// }
	// };
	// }
	// }
	// }
	// }

	public <E> List<E> executeQuery(String sql,
			FunctionThatThrows<ResultSet, E> action) throws SQLException {
		List<E> list = new LinkedList<>();
		try (Connection connection = createConnection()) {
			try (Statement statement = connection.createStatement()) {
				try (ResultSet rs = statement.executeQuery(sql)) {
					while (rs.next()) {
						E e = action.apply(rs);
						list.add(e);
					}
				}
			}
		}
		return list;
	}

	public static void main(String[] args) throws SQLException {

		// "jdbc:sqlserver://localhost;databaseName=scm;user=MyUserName;password=*****;";
		String url = "jdbc:sqlserver://localhost;databaseName=scm;integratedSecurity=true;";
		Database db = new Database(url);
		Iterable<String> names = db.executeQuery("select * from Users",
				(rs) -> {
					return rs.getString("Username");
				});

		names.forEach(System.out::println);

	}
}
